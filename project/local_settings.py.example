import os

"""
暴露的env有：
DEBUG:  False or True
SECRET_KEY: 加密加盐传
DB_NAME: 数据库名
DB_USER: 数据库用户名
DB_PASSWORD: 数据库密码
DB_HOST: 数据库主机ip或域名
DB_PORT: 数据库端口
REDIS_URL: redis url 联接地址，不加bucket号
HOME: 当前用户 home 目录，不加最后的 '/'
STATIC_ROOT: 静态文件路径，需要能被nginx等访问到
MEDIA_ROOT: 上传文件路径，需要能被nginx等访问到，并且程序有权限写入
"""

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

_debug = os.getenv('DEBUG', 'False')

DEBUG = _debug == 'True'

_secret_key = os.getenv('SECRET_KEY')
if _secret_key is not None:
    SECRET_KEY = _secret_key

DATABASES = {
    'default': {
        'ENGINE': 'django_postgrespool2',
        'NAME': os.getenv('DB_NAME', 'dbname'),
        'USER': os.getenv('DB_USER', 'dbuser'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'dbpass'),
        'HOST': os.getenv('DB_HOST', 'dbhost'),
        'PORT': os.getenv('DB_PORT', 'dbport'),
    }
}

ALLOWED_HOSTS = ['*']

CORS_ALLOW_ALL_ORIGINS = True

_redis_url = os.getenv('REDIS_URL', 'redis://localhost:6379/')

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': _redis_url,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        }
    },
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": _redis_url,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

CELERY_BROKER_URL = _redis_url+'2'

GIT_SSH_COMMAND = 'ssh -v -i /Users/bhr/.ssh/id_rsa'

GIT_USER_HOME = os.getenv('GIT_USER_HOME', os.getenv('HOME'))

REDIS_URL = _redis_url

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'INFO',  #'DEBUG',  # change to DEBUG to view console log
            'propagate': True,
        },
        'restapi': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'githook': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

STATIC_URL = '/static/'
STATIC_ROOT = os.getenv('STATIC_ROOT', os.path.join(BASE_DIR, 'static/'))

MEDIA_URL = '/media/'
MEDIA_ROOT = os.getenv('MEDIA_ROOT', os.path.join(BASE_DIR, 'media/'))

LIBREOFFICE_PATH = '/usr/bin/soffice'