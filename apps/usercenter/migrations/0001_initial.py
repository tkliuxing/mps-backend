# Generated by Django 3.2.10 on 2021-12-29 15:44

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import usercenter.models
import utility.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('baseconfig', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FuncPermission',
            fields=[
                ('id', utility.db_fields.TableNamePKField(blank=True, default=None, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('sys_id', models.IntegerField(db_index=True, default=1, verbose_name='系统ID')),
                ('org_id', models.IntegerField(db_index=True, default=1, verbose_name='组织ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('codename', models.CharField(max_length=100, unique=True, verbose_name='代码')),
            ],
            options={
                'verbose_name': '04.功能权限',
                'verbose_name_plural': '04.功能权限',
                'ordering': ('codename',),
            },
        ),
        migrations.CreateModel(
            name='PhoneAccess',
            fields=[
                ('id', utility.db_fields.TableNamePKField(blank=True, default=None, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('sys_id', models.IntegerField(db_index=True, default=1, verbose_name='系统ID')),
                ('org_id', models.IntegerField(db_index=True, default=1, verbose_name='组织ID')),
                ('phone', models.CharField(help_text='手机号码', max_length=30, verbose_name='手机号码')),
                ('phone_access', models.CharField(help_text='验证码', max_length=10, verbose_name='验证码')),
                ('create_time', models.DateTimeField(auto_now=True, help_text='发送时间', verbose_name='发送时间')),
            ],
            options={
                'verbose_name': '05.手机验证码',
                'verbose_name_plural': '05.手机验证码',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='FuncGroup',
            fields=[
                ('id', utility.db_fields.TableNamePKField(blank=True, default=None, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('sys_id', models.IntegerField(db_index=True, default=1, verbose_name='系统ID')),
                ('org_id', models.IntegerField(db_index=True, default=1, verbose_name='组织ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='角色名称')),
                ('permissions', models.ManyToManyField(blank=True, help_text='通过中间表 usercenter_funcgroup_permissions 关联 usercenter_funcpermission', to='usercenter.FuncPermission', verbose_name='功能权限')),
            ],
            options={
                'verbose_name': '03.角色',
                'verbose_name_plural': '03.角色',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', utility.db_fields.TableNamePKField(blank=True, default=None, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('sys_id', models.IntegerField(db_index=True, default=1, verbose_name='系统ID')),
                ('org_id', models.IntegerField(db_index=True, default=1, verbose_name='组织ID')),
                ('name', models.CharField(help_text='名称', max_length=50, verbose_name='名称')),
                ('category', models.CharField(blank=True, default='', max_length=15, verbose_name='类别')),
                ('contact_name', models.CharField(blank=True, help_text='联系人', max_length=16, null=True, verbose_name='联系人')),
                ('contact_phone', models.CharField(blank=True, help_text='联系电话', max_length=32, null=True, verbose_name='联系电话')),
                ('contact_mobile', models.CharField(blank=True, help_text='手机号', max_length=32, null=True, verbose_name='手机号')),
                ('contact_fax', models.CharField(blank=True, help_text='传真', max_length=32, null=True, verbose_name='传真')),
                ('description', models.TextField(blank=True, help_text='说明', null=True, verbose_name='说明')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='parent_id to usercenter_department', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='usercenter.department', verbose_name='上级')),
            ],
            options={
                'verbose_name': '01.机构部门',
                'verbose_name_plural': '01.机构部门',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', utility.db_fields.TableNamePKField(blank=True, default=None, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('sys_id', models.IntegerField(db_index=True, default=1, verbose_name='系统ID')),
                ('org_id', models.IntegerField(db_index=True, default=1, verbose_name='组织ID')),
                ('username', models.CharField(error_messages={'unique': '用户名已存在。'}, help_text='必填，小于150个字符。', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='用户名')),
                ('full_name', models.CharField(blank=True, help_text='姓名', max_length=30, verbose_name='姓名')),
                ('email', models.EmailField(blank=True, help_text='Email', max_length=254, null=True, verbose_name='Email')),
                ('mobile', models.CharField(blank=True, db_index=True, help_text='手机号码', max_length=32, null=True, verbose_name='手机号码')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='可进入后台管理', verbose_name='可进入后台管理')),
                ('is_active', models.BooleanField(default=True, help_text='允许登录', verbose_name='允许登录')),
                ('is_tester', models.BooleanField(default=False, help_text='测试用户', verbose_name='测试用户')),
                ('description', models.TextField(blank=True, help_text='备注', null=True, verbose_name='备注')),
                ('sort_num', models.IntegerField(blank=True, db_index=True, default=0, help_text='排序编号', null=True, verbose_name='排序编号')),
                ('wechart_name', models.CharField(blank=True, db_index=True, help_text='微信名称', max_length=64, null=True, verbose_name='微信名称')),
                ('wechart_avatar', models.ImageField(blank=True, help_text='微信头像', null=True, upload_to='avatar/%Y/%m/%d/', verbose_name='微信头像')),
                ('wechart_oid', models.CharField(blank=True, db_index=True, help_text='微信OID', max_length=64, null=True, verbose_name='微信OID')),
                ('wechart_uid', models.CharField(blank=True, db_index=True, help_text='微信UID', max_length=64, null=True, verbose_name='微信UID')),
                ('wxa_oid', models.CharField(blank=True, db_index=True, help_text='微信小程序OID', max_length=64, null=True, verbose_name='微信小程序OID')),
                ('wechart_access_token', models.CharField(blank=True, help_text='微信 ACCESS TOKEN', max_length=128, null=True, verbose_name='微信 ACCESS TOKEN')),
                ('wechart_refresh_token', models.CharField(blank=True, help_text='微信 REFRESH TOKEN', max_length=128, null=True, verbose_name='微信 REFRESH TOKEN')),
                ('wechart_session_key', models.CharField(blank=True, help_text='微信会话密钥 SESSION_KEY', max_length=255, null=True, verbose_name='微信会话密钥 SESSION_KEY')),
                ('category', models.ManyToManyField(blank=True, db_constraint=False, help_text='通过中间表 usercenter_user_category 关联 baseconfig_basetree', related_name='users', to='baseconfig.BaseTree', verbose_name='分类')),
                ('department', models.ForeignKey(blank=True, db_constraint=False, help_text='department_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='usercenter.department', verbose_name='部门')),
                ('func_groups', models.ManyToManyField(blank=True, db_constraint=False, help_text='通过中间表 usercenter_user_func_groups 关联 usercenter_funcgroup', related_name='user_set', related_query_name='user', to='usercenter.FuncGroup', verbose_name='角色')),
                ('func_user_permissions', models.ManyToManyField(blank=True, db_constraint=False, help_text='通过中间表 usercenter_user_func_user_permissions 关联 usercenter_funcpermission', related_name='user_set', related_query_name='user', to='usercenter.FuncPermission', verbose_name='功能权限')),
            ],
            options={
                'verbose_name': '02.用户',
                'verbose_name_plural': '02.用户',
                'ordering': ['department', 'sort_num', '-pk'],
                'unique_together': {('username', 'sys_id')},
            },
            managers=[
                ('objects', usercenter.models.UserManager()),
            ],
        ),
    ]
